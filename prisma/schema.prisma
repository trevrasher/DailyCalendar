generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  dailies   Daily[]
  todos     Todo[]
  templates Template[]
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Todo {
  id        Int      @id @default(autoincrement())
  text      String
  completed Boolean  @default(false)
  day       Int
  month     Int
  year      Int
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
}

model Template {
  id Int @id @default(autoincrement())
  text String
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
}

model Daily {
  id        Int    @id @default(autoincrement())
  text      String
  completed Boolean
  day       Int
  month     Int
  year      Int
  userId    Int
  user      User   @relation(fields: [userId], references: [id])

  @@unique([text, day, month, year, userId])
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}